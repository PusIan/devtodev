spring.application.name=consumer
spring.kafka.bootstrap-servers=${KAFKA_HOSTNAME}:${KAFKA_PORT}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP}
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.data.redis.host=${REDIS_HOSTNAME}
spring.data.redis.port=${REDIS_PORT}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.datasource.url=jdbc:postgresql://${POSTGRES_HOSTNAME}:${POSTGRES_PORT}/${POSTGRES_DB}
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.key-prefix=CACHE
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:/schema.sql
spring.sql.init.continue-on-error=true
devtodev.kafka.topic.input.name=${KAFKA_TOPIC_NAME_INPUT}
devtodev.kafka.topic.output.name=${KAFKA_TOPIC_NAME_OUTPUT}
devtodev.kafka.topic.output.numberofpartitions=2
devtodev.kafka.topic.output.replicationfactor=1